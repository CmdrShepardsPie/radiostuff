{"version":3,"file":"generate-frequencies.js","sourceRoot":"","sources":["../../src/scripts/generate-frequencies.ts"],"names":[],"mappings":"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","sourcesContent":["import 'module-alias/register';\n\nimport { writeFileAsync } from '@helpers/fs-helpers';\nimport { createLog } from '@helpers/log-helpers';\nimport { IFrequencyDefinition } from '@interfaces/i-frequency-definition';\nimport { IRepeaterRaw } from '@interfaces/i-repeater-raw';\n\nconst log: (...msg: any[]) => void = createLog('Generate Frequencies');\nlet frequencies: IRepeaterRaw[] = [];\nconst range2m: IFrequencyDefinition[] = [\n  // Channels\n  { start: 146.4, end: 146.595, steps: [0.015], name: `FM Voice` },\n  { start: 147.42, end: 147.585, steps: [0.015], name: `FM Voice` },\n\n  // Range\n  { start: 144.9, end: 145.1, steps: [0.015], name: `Weak Signal, FM, Digital/Packet` },\n  { start: 145.5, end: 145.8, steps: [0.015], name: `Miscellaneous and Experimental Modes` },\n];\n\nconst range125m: IFrequencyDefinition[] = [\n  // Channels\n  { start: 223.4, end: 223.52, steps: [0.020], name: `FM Voice` },\n  { start: 222.16, end: 222.24, steps: [0.020], name: `Mixed Mode` },\n  { start: 223.72, end: 223.84, steps: [0.020], name: `Mixed Mode` },\n\n  // Range\n  { start: 223.53, end: 223.63, steps: [0.020], name: `Digital/Packet` },\n];\n\nconst range70cm: IFrequencyDefinition[] = [\n  // Channels\n  { start: 440.7, end: 441.3, steps: [0.025], name: `Mixed Mode` },\n  { start: 445.7, end: 446.275, steps: [0.025], name: `FM Voice` },\n  { start: 446.2, end: 446.3, steps: [0.0125], name: `Digital Voice Narrowband` },\n\n  // Range\n  { start: 434.5, end: 435, steps: [0.025], name: `Mixed Mode Digital and Voice` },\n  { start: 439.5, end: 440, steps: [0.025], name: `Mixed Mode Digital and Voice` },\n];\n\n[...range2m, ...range125m, ...range70cm].forEach((range: IFrequencyDefinition) => {\n  range.steps.forEach((step: number) => {\n    for (let i: number = range.start; i <= range.end; i += step) {\n      i = Math.round(i * 100000) / 100000;\n      if (!frequencies.find((f: IRepeaterRaw) => f.Frequency === i)) {\n        frequencies.push({ Frequency: i, Name: range.name } as any);\n      }\n    }\n  });\n});\nfrequencies = frequencies.sort((a: IRepeaterRaw, b: IRepeaterRaw) => (a.Frequency || 0) - (b.Frequency || 0));\nlog(frequencies, frequencies.length);\nwriteFileAsync(`./data/frequencies.json`, JSON.stringify(frequencies, null, 2))\n  .then((r: unknown) => log(`Done`, r));\n"]}