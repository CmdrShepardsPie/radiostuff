{"version":3,"file":"combine.js","sourceRoot":"","sources":["../../src/scripts/combine.ts"],"names":[],"mappings":";;;;;;;;;;;;;;IAAA,oDAAkF;IAClF,8CAAkD;IAClD,sDAAiD;IAEjD,gEAAkD;IAElD,MAAM,GAAG,GAA4B,uBAAS,CAAC,SAAS,CAAC,CAAC;IAE1D,kBAAe,CAAC,KAAK,IAAmB,EAAE;QACxC,MAAM,OAAO,GAAU,CAAC,YAAY,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,mBAAmB;QAC1E,MAAM,QAAQ,GAAmB,EAAE,CAAC;QACpC,MAAM,KAAK,GAAqB,MAAM,qCAAwB,CAAiB,2BAA2B,CAAC,CAAC;QAC5G,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAClC,MAAM,KAAK,GAA2C,EAAE,CAAC;QACzD,KAAK,CAAC,OAAO,CAAC,CAAC,IAAoB,EAAE,EAAE;YACrC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAkB,EAAE,EAAE;gBAClC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;oBACzC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;oBAC5C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpB,MAAM,QAAQ,GAAW,sBAAW,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACjF,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,UAAU,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;QAChD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,CAAe,EAAE,EAAE;YACjD,MAAM,GAAG,GAAW,wBAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,GAAG,GAAW,wBAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YACrD,MAAM,aAAa,GAAuB,CAAC,CAAC,IAAI,CAAC;YACjD,MAAM,aAAa,GAAuB,CAAC,CAAC,IAAI,CAAC;YACjD,MAAM,UAAU,GAAW,wBAAc,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,UAAU,GAAW,wBAAc,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,IAAI,GAAW,GAAG,GAAG,IAAI,aAAa,IAAI,UAAU,EAAE,CAAC;YAC7D,MAAM,IAAI,GAAW,GAAG,GAAG,IAAI,aAAa,IAAI,UAAU,EAAE,CAAC;YAE7D,OAAO,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,MAAM,KAAK,GAA+B,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAmC,EAAE,IAAkB,EAAE,EAAE;YACpH,MAAM,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAChE,MAAM,GAAG,GAAW,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACnE,MAAM,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YACpE,iCAAiC;YACjC,MAAM,KAAK,GAAW,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzC,OAAO,EAAE,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC;QAC3C,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,sCAAsC;QACtC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5B,uGAAuG;QACvG,MAAM,8BAAiB,CAAC,4BAA4B,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC,CAAC,EAAE,CAAC","sourcesContent":["import { getAllFilesFromDirectory, writeToJsonAndCsv } from '@helpers/fs-helpers';\nimport { numberToString } from '@helpers/helpers';\nimport { createLog } from '@helpers/log-helpers';\nimport { IRepeaterRaw } from '@interfaces/i-repeater-raw';\nimport gpsDistance, { Point } from 'gps-distance';\n\nconst log: (...msg: any[]) => void = createLog('Combine');\n\nexport default (async (): Promise<void> => {\n  const myPoint: Point = [39.627071500, -104.893322500]; // 4982 S Ulster St\n  const combined: IRepeaterRaw[] = [];\n  const files: IRepeaterRaw[][] = await getAllFilesFromDirectory<IRepeaterRaw[]>('data/repeaters/results/CO');\n  log('Got', files.length, 'files');\n  const found: { [key: string]: boolean | undefined } = {};\n  files.forEach((file: IRepeaterRaw[]) => {\n    log('Got', file.length, 'repeaters');\n    file.forEach((item: IRepeaterRaw) => {\n      if (!found[`${item.state_id}-${item.ID}`]) {\n        found[`${item.state_id}-${item.ID}`] = true;\n        combined.push(item);\n        const distance: number = gpsDistance([myPoint, [item.Latitude, item.Longitude]]);\n        item.Mi = distance * 0.62137119;\n      }\n    });\n  });\n  log('Got', combined.length, 'unique repeaters');\n  combined.sort((a: IRepeaterRaw, b: IRepeaterRaw) => {\n    const aMi: string = numberToString(a.Mi || 0, 4, 24);\n    const bMi: string = numberToString(b.Mi || 0, 4, 24);\n    const aRepeaterName: string | undefined = a.Call;\n    const bRepeaterName: string | undefined = b.Call;\n    const aFrequency: string = numberToString(a.Frequency || 0, 4, 5);\n    const bFrequency: string = numberToString(b.Frequency || 0, 4, 5);\n    const aStr: string = `${aMi} ${aRepeaterName} ${aFrequency}`;\n    const bStr: string = `${bMi} ${bRepeaterName} ${bFrequency}`;\n\n    return aStr > bStr ? 1 : aStr < bStr ? -1 : 0;\n  });\n  const stats: { [ key: string]: number } = combined.reduce((result: { [ key: string ]: number }, data: IRepeaterRaw) => {\n    const freq: string = Math.round(data.Frequency || 0).toString();\n    const pow: number = Math.pow(10, Math.max(freq.length - 2, 0)) * 2;\n    const group: number = Math.round((data.Frequency || 0) / pow) * pow;\n    // console.log(freq, pow, group);\n    const count: number = result[group] || 0;\n    return { ...result, [group]: count + 1 };\n  }, {});\n  // tslint:disable-next-line:no-console\n  console.log('STATS', stats);\n  // combined.slice(0, 100).forEach((c) => log(c.Call, \"\\t\", c.Latitude, \"\\t\", c.Longitude, \"\\t\", c.Mi));\n  await writeToJsonAndCsv('data/repeaters/combined/CO', combined);\n})();\n"]}