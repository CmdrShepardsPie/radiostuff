{"version":3,"file":"get-repeaters.js","sourceRoot":"","sources":["../../src/scripts/get-repeaters.ts"],"names":[],"mappings":"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","sourcesContent":["import { parseAsync } from '@helpers/csv-helpers';\nimport { readFileAsync, writeToJsonAndCsv } from '@helpers/fs-helpers';\nimport { numberToString } from '@helpers/helpers';\nimport { createLog } from '@helpers/log-helpers';\nimport { ICountySeat } from '@interfaces/i-county-seat';\nimport { IRepeaterRaw } from '@interfaces/i-repeater-raw';\nimport chalk from 'chalk';\nimport Scraper from './modules/scraper';\n\nconst log: (...msg: any[]) => void = createLog('Get Repeaters');\n\nasync function save(place: string | number, distance: number): Promise<void> {\n  log(chalk.green('Save'), place, distance);\n\n  const scraper: Scraper = new Scraper(place, distance);\n\n  const result: IRepeaterRaw[] = await scraper.process();\n\n  const columns: { [key in keyof IRepeaterRaw]: Array<string | number | undefined> } = {};\n  result.forEach((row: IRepeaterRaw) => {\n    Object.entries(row).forEach((entry: [string, (string | number | undefined)]) => {\n      const key: string = entry[0];\n      const value: string | number | undefined = entry[1];\n      if (!columns[key]) {\n        columns[key] = [];\n      }\n      if (columns[key].indexOf(value) === -1) {\n        columns[key].push(value);\n      }\n    });\n  });\n\n  result.forEach((row: IRepeaterRaw) => {\n    Object.entries(row).forEach((entry: [string, (string | number | undefined)]) => {\n      const key: string = entry[0];\n      const value: string | number | undefined = entry[1];\n      if (columns[key].length === 1 && columns[key][0] === '' && value === '') {\n        // @ts-ignore\n        row[key] = 'yes';\n      }\n    });\n  });\n\n  result.sort((a: IRepeaterRaw, b: IRepeaterRaw) => {\n    const aMi: string = numberToString(a.Mi || 0, 4, 5);\n    const bMi: string = numberToString(b.Mi || 0, 4, 5);\n    const aName: string | undefined = a.Call;\n    const bName: string | undefined = b.Call;\n    const aFrequency: string = numberToString(a.Frequency || 0, 4, 5);\n    const bFrequency: string = numberToString(b.Frequency || 0, 4, 5);\n    const aStr: string = `${aMi} ${aName} ${aFrequency}`;\n    const bStr: string = `${bMi} ${bName} ${bFrequency}`;\n    return aStr > bStr ? 1 : aStr < bStr ? -1 : 0;\n  });\n  // result.sort((a, b) => {(a.Call > b.Call ? 1 : a.Call < b.Call ? -1 : 0));\n  // result.sort((a, b) => (a.Frequency - b.Frequency));\n  // result.sort((a, b) => (a.Mi - b.Mi));\n\n  // console.log(place, distance, result.length);\n\n  const parts: string[] = place.toString().split(`,`);\n  const subPlace: string = `${(parts[1] || '.').trim()}/${parts[0].trim()}`;\n\n  log(chalk.yellow('Results'), result.length, subPlace);\n\n  await writeToJsonAndCsv(`data/repeaters/results/${subPlace}`, result);\n}\n\nexport default (async (): Promise<void> => {\n  const countyFileData: Buffer = await readFileAsync('data/Colorado_County_Seats.csv');\n  const countyData: ICountySeat[] = await parseAsync(countyFileData, { columns: true });\n  const cities: string[] = countyData.map((c: ICountySeat) => `${c['County Seat']}, CO`);\n  while (cities.length) {\n    const name: string | undefined = cities.shift();\n    if (name) {\n      await save(name, 200);\n    }\n  }\n})();\n\n// export default start();\n"]}