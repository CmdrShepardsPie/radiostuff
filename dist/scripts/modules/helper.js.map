{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../../src/scripts/modules/helper.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,SAAgB,eAAe,CAAC,EAAW;QACzC,MAAM,KAAK,GAAW,OAAO,CAAC,EAAE,CAAC,CAAC;QAClC,MAAM,GAAG,GAAW,SAAS,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;IACnC,CAAC;IAJD,0CAIC;IAED,SAAgB,SAAS,CAAC,IAAY,EAAE,MAAc,oBAAoB;QACxE,IAAI,MAAM,GAAW,GAAG,CAAC;QACzB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YACtB,MAAM,KAAK,GAA4B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxD,+BAA+B;YAC/B,IAAI,KAAK,EAAE;gBACT,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/B;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAVD,8BAUC;IAED,SAAgB,OAAO,CAAC,EAAW;QACjC,IAAI,EAAE,EAAE;YACN,IAAI,IAAI,GAAW,EAAE,CAAC,SAAS,CAAC;YAChC,IAAI,IAAI,EAAE;gBACR,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;gBAClD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;gBACrC,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;SACF;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAVD,0BAUC;IAED,SAAgB,MAAM,CAAC,GAAW;QAChC,QAAQ,GAAG,EAAE;YACX,KAAK,GAAG;gBACN,OAAO,CAAC,CAAC;YACX,KAAK,IAAI;gBACP,OAAO,CAAC,CAAC;YACX,KAAK,GAAG;gBACN,OAAO,CAAC,CAAC;YACX,KAAK,IAAI;gBACP,OAAO,CAAC,CAAC;YACX,KAAK,GAAG;gBACN,OAAO,CAAC,CAAC;YACX,KAAK,IAAI;gBACP,OAAO,CAAC,CAAC;YACX,KAAK,GAAG;gBACN,OAAO,CAAC,CAAC;YACX,KAAK,IAAI;gBACP,OAAO,CAAC,CAAC;SACZ;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IApBD,wBAoBC","sourcesContent":["export function getTextOrNumber(el: Element): number | string {\n  const value: string = getText(el);\n  const num: number = getNumber(value);\n  return !isNaN(num) ? num : value;\n}\n\nexport function getNumber(text: string, reg: RegExp = /^([-+]?\\d+\\.?\\d*)$/): number {\n  let result: number = NaN;\n  if (text && text.match) {\n    const match: RegExpMatchArray | null = text.match(text);\n    // console.log('match', match);\n    if (match) {\n      result = parseFloat(match[1]);\n    }\n  }\n  return result;\n}\n\nexport function getText(el: Element): string {\n  if (el) {\n    let text: string = el.innerHTML;\n    if (text) {\n      text = text.replace(/<script>.*<\\/script>/g, ' ');\n      text = text.replace(/<[^>]*>/g, ' ');\n      return text.trim();\n    }\n  }\n  return '';\n}\n\nexport function mapDir(dir: string): number {\n  switch (dir) {\n    case 'N':\n      return 1;\n    case 'NE':\n      return 2;\n    case 'E':\n      return 3;\n    case 'SE':\n      return 4;\n    case 'S':\n      return 5;\n    case 'SW':\n      return 6;\n    case 'W':\n      return 7;\n    case 'NW':\n      return 8;\n  }\n  return 0;\n}\n"]}