"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _csv = require("csv");
const util_1 = require("util");
exports.parseAsync = util_1.promisify(_csv.parse);
exports.stringifyAsync = util_1.promisify(_csv.stringify);
function fillArrayObjects(inArray) {
    const outArray = [...inArray];
    const keys = {};
    outArray.forEach((item) => {
        const entries = Object.entries(item);
        entries.forEach((entry) => {
            keys[entry[0]] = true;
        });
    });
    outArray.forEach((item, index) => {
        item = { ...item };
        outArray[index] = item;
        Object.keys(keys).forEach((key) => {
            // @ts-ignore
            item[key] = item[key];
        });
    });
    return outArray;
}
exports.fillArrayObjects = fillArrayObjects;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3N2LWhlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaGVscGVycy9jc3YtaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDRCQUE0QjtBQUM1QiwrQkFBaUM7QUFFcEIsUUFBQSxVQUFVLEdBQUcsZ0JBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDbkMsUUFBQSxjQUFjLEdBQUcsZ0JBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7QUFFeEQsU0FBZ0IsZ0JBQWdCLENBQUMsT0FBaUI7SUFDaEQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0lBQzlCLE1BQU0sSUFBSSxHQUErQixFQUFFLENBQUM7SUFDNUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1FBQ3hCLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDeEIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUNILFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDL0IsSUFBSSxHQUFHLEVBQUMsR0FBRyxJQUFJLEVBQUMsQ0FBQztRQUNqQixRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7WUFDaEMsYUFBYTtZQUNiLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUNILE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUFsQkQsNENBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgX2NzdiBmcm9tIFwiY3N2XCI7XG5pbXBvcnQgeyBwcm9taXNpZnkgfSBmcm9tIFwidXRpbFwiO1xuXG5leHBvcnQgY29uc3QgcGFyc2VBc3luYyA9IHByb21pc2lmeShfY3N2LnBhcnNlKTtcbmV4cG9ydCBjb25zdCBzdHJpbmdpZnlBc3luYyA9IHByb21pc2lmeShfY3N2LnN0cmluZ2lmeSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWxsQXJyYXlPYmplY3RzKGluQXJyYXk6IG9iamVjdFtdKSB7XG4gIGNvbnN0IG91dEFycmF5ID0gWy4uLmluQXJyYXldO1xuICBjb25zdCBrZXlzOiB7W2luZGV4OiBzdHJpbmddOiBib29sZWFufSA9IHt9O1xuICBvdXRBcnJheS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgY29uc3QgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKGl0ZW0pO1xuICAgIGVudHJpZXMuZm9yRWFjaCgoZW50cnkpID0+IHtcbiAgICAgIGtleXNbZW50cnlbMF1dID0gdHJ1ZTtcbiAgICB9KTtcbiAgfSk7XG4gIG91dEFycmF5LmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgaXRlbSA9IHsuLi5pdGVtfTtcbiAgICBvdXRBcnJheVtpbmRleF0gPSBpdGVtO1xuICAgIE9iamVjdC5rZXlzKGtleXMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgaXRlbVtrZXldID0gaXRlbVtrZXldO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG91dEFycmF5O1xufVxuIl19