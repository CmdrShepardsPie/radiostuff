{"version":3,"file":"csv-helpers.js","sourceRoot":"","sources":["../../src/helpers/csv-helpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;IAAA,0DAA8B;IAC9B,kEAAsC;IACtC,+BAAiC;IAKpB,QAAA,UAAU,GAAiB,gBAAS,CAAkD,mBAAK,CAAC,CAAC;IAC7F,QAAA,cAAc,GAAqB,gBAAS,CAA6C,uBAAgB,CAAC,CAAC;IAExH,SAAgB,gBAAgB,CAAC,OAAiB;QAChD,MAAM,QAAQ,GAAa,CAAC,GAAG,OAAO,CAAC,CAAC;QACxC,MAAM,IAAI,GAA+B,EAAE,CAAC;QAC5C,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAY,EAAE,EAAE;YAChC,MAAM,OAAO,GAAyB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3D,OAAO,CAAC,OAAO,CAAC,CAAC,KAAoB,EAAE,EAAE;gBACvC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAY,EAAE,KAAa,EAAE,EAAE;YAC/C,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC;YACnB,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;gBACxC,IAAI,CAAC,GAAwB,CAAC,GAAG,IAAI,CAAC,GAAwB,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;IAjBD,4CAiBC","sourcesContent":["import parse from 'csv-parse';\nimport stringify from 'csv-stringify';\nimport { promisify } from 'util';\n\nexport type ParsePromise = (input: Buffer | string, options?: parse.Options) => Promise<any>;\nexport type StringifyPromise = (input: any, options?: stringify.Options) => Promise<string>;\n\nexport const parseAsync: ParsePromise = promisify<Buffer | string, parse.Options | undefined, any>(parse);\nexport const stringifyAsync: StringifyPromise = promisify<any, stringify.Options | undefined, string>(stringify as any);\n\nexport function fillArrayObjects(inArray: object[]): object[] {\n  const outArray: object[] = [...inArray];\n  const keys: { [key: string]: boolean } = {};\n  outArray.forEach((item: object) => {\n    const entries: Array<[string, any]> = Object.entries(item);\n    entries.forEach((entry: [string, any]) => {\n      keys[entry[0]] = true;\n    });\n  });\n  outArray.forEach((item: object, index: number) => {\n    item = { ...item };\n    outArray[index] = item;\n    Object.keys(keys).forEach((key: string) => {\n      item[key as keyof typeof item] = item[key as keyof typeof item];\n    });\n  });\n  return outArray;\n}\n"]}