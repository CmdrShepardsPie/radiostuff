"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const csv_parse_1 = __importDefault(require("csv-parse"));
const csv_stringify_1 = __importDefault(require("csv-stringify"));
const util_1 = require("util");
exports.parseAsync = util_1.promisify(csv_parse_1.default);
exports.stringifyAsync = util_1.promisify(csv_stringify_1.default);
function fillArrayObjects(inArray) {
    const outArray = [...inArray];
    const keys = {};
    outArray.forEach((item) => {
        const entries = Object.entries(item);
        entries.forEach((entry) => {
            keys[entry[0]] = true;
        });
    });
    outArray.forEach((item, index) => {
        item = { ...item };
        outArray[index] = item;
        Object.keys(keys).forEach((key) => {
            item[key] = item[key];
        });
    });
    return outArray;
}
exports.fillArrayObjects = fillArrayObjects;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3N2LWhlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaGVscGVycy9jc3YtaGVscGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLDBEQUE4QjtBQUM5QixrRUFBc0M7QUFDdEMsK0JBQWlDO0FBS3BCLFFBQUEsVUFBVSxHQUFpQixnQkFBUyxDQUFrRCxtQkFBSyxDQUFDLENBQUM7QUFDN0YsUUFBQSxjQUFjLEdBQXFCLGdCQUFTLENBQTZDLHVCQUFnQixDQUFDLENBQUM7QUFFeEgsU0FBZ0IsZ0JBQWdCLENBQUMsT0FBaUI7SUFDaEQsTUFBTSxRQUFRLEdBQWEsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sSUFBSSxHQUErQixFQUFFLENBQUM7SUFDNUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVksRUFBRSxFQUFFO1FBQ2hDLE1BQU0sT0FBTyxHQUFvQixNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RELE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFvQixFQUFFLEVBQUU7WUFDdkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0gsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVksRUFBRSxLQUFhLEVBQUUsRUFBRTtRQUMvQyxJQUFJLEdBQUcsRUFBRSxHQUFHLElBQUksRUFBRSxDQUFDO1FBQ25CLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFXLEVBQUUsRUFBRTtZQUN4QyxJQUFJLENBQUMsR0FBd0IsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUF3QixDQUFDLENBQUM7UUFDbEUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUNILE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUFqQkQsNENBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhcnNlIGZyb20gXCJjc3YtcGFyc2VcIjtcbmltcG9ydCBzdHJpbmdpZnkgZnJvbSBcImNzdi1zdHJpbmdpZnlcIjtcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gXCJ1dGlsXCI7XG5cbmV4cG9ydCB0eXBlIFBhcnNlUHJvbWlzZSA9IChpbnB1dDogQnVmZmVyIHwgc3RyaW5nLCBvcHRpb25zPzogcGFyc2UuT3B0aW9ucykgPT4gUHJvbWlzZTxhbnk+O1xuZXhwb3J0IHR5cGUgU3RyaW5naWZ5UHJvbWlzZSA9IChpbnB1dDogYW55LCBvcHRpb25zPzogc3RyaW5naWZ5Lk9wdGlvbnMpID0+IFByb21pc2U8c3RyaW5nPjtcblxuZXhwb3J0IGNvbnN0IHBhcnNlQXN5bmM6IFBhcnNlUHJvbWlzZSA9IHByb21pc2lmeTxCdWZmZXIgfCBzdHJpbmcsIHBhcnNlLk9wdGlvbnMgfCB1bmRlZmluZWQsIGFueT4ocGFyc2UpO1xuZXhwb3J0IGNvbnN0IHN0cmluZ2lmeUFzeW5jOiBTdHJpbmdpZnlQcm9taXNlID0gcHJvbWlzaWZ5PGFueSwgc3RyaW5naWZ5Lk9wdGlvbnMgfCB1bmRlZmluZWQsIHN0cmluZz4oc3RyaW5naWZ5IGFzIGFueSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWxsQXJyYXlPYmplY3RzKGluQXJyYXk6IG9iamVjdFtdKTogb2JqZWN0W10ge1xuICBjb25zdCBvdXRBcnJheTogb2JqZWN0W10gPSBbLi4uaW5BcnJheV07XG4gIGNvbnN0IGtleXM6IHsgW2tleTogc3RyaW5nXTogYm9vbGVhbiB9ID0ge307XG4gIG91dEFycmF5LmZvckVhY2goKGl0ZW06IG9iamVjdCkgPT4ge1xuICAgIGNvbnN0IGVudHJpZXM6IFtzdHJpbmcsIGFueV1bXSA9IE9iamVjdC5lbnRyaWVzKGl0ZW0pO1xuICAgIGVudHJpZXMuZm9yRWFjaCgoZW50cnk6IFtzdHJpbmcsIGFueV0pID0+IHtcbiAgICAgIGtleXNbZW50cnlbMF1dID0gdHJ1ZTtcbiAgICB9KTtcbiAgfSk7XG4gIG91dEFycmF5LmZvckVhY2goKGl0ZW06IG9iamVjdCwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgIGl0ZW0gPSB7IC4uLml0ZW0gfTtcbiAgICBvdXRBcnJheVtpbmRleF0gPSBpdGVtO1xuICAgIE9iamVjdC5rZXlzKGtleXMpLmZvckVhY2goKGtleTogc3RyaW5nKSA9PiB7XG4gICAgICBpdGVtW2tleSBhcyBrZXlvZiB0eXBlb2YgaXRlbV0gPSBpdGVtW2tleSBhcyBrZXlvZiB0eXBlb2YgaXRlbV07XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gb3V0QXJyYXk7XG59XG4iXX0=